{"ast":null,"code":"var _jsxFileName = \"/Users/choseong-jin/react_spring_boot/front-end/mall/src/hooks/useCustomLogin.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, createSearchParams, useNavigate } from \"react-router-dom\";\nimport { loginPostAsync, logout } from \"../slices/loginSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useCustomLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const exceptionHandle = ex => {\n    console.log(\"Exception------------------------\");\n    console.log(ex);\n    const errorMsg = ex.response.data.error;\n    const errorStr = createSearchParams({\n      error: errorMsg\n    }).toString();\n    if (errorMsg === 'REQUIRE_LOGIN') {\n      alert(\"로그인 해야만 합니다.\");\n      navigate({\n        pathname: '/member/login',\n        search: errorStr\n      });\n      return;\n    }\n    if (ex.response.data.error === 'ERROR_ACCESSDENIED') {\n      alert(\"해당 메뉴를 사용할 수 있는 권한이 없습니다.\");\n      navigate({\n        pathname: '/member/login',\n        search: errorStr\n      });\n      return;\n    }\n  };\n  const loginState = useSelector(state => state.loginSlice); //-------로그인 상태\n\n  const isLogin = loginState.email ? true : false; //----------로그인 여부 \n\n  const doLogin = async loginParam => {\n    //----------로그인 함수 \n\n    const action = await dispatch(loginPostAsync(loginParam));\n    return action.payload;\n  };\n  const doLogout = () => {\n    //---------------로그아웃 함수 \n\n    dispatch(logout());\n  };\n  const moveToPath = path => {\n    //----------------페이지 이동 \n    navigate({\n      pathname: path\n    }, {\n      replace: true\n    });\n  };\n  const moveToLogin = () => {\n    //----------------------로그인 페이지로 이동 \n    navigate({\n      pathname: '/member/login'\n    }, {\n      replace: true\n    });\n  };\n  const moveToLoginReturn = () => {\n    //----------------------로그인 페이지로 이동 컴포넌트 \n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/member/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  };\n  return {\n    loginState,\n    isLogin,\n    doLogin,\n    doLogout,\n    moveToPath,\n    moveToLogin,\n    moveToLoginReturn,\n    exceptionHandle\n  };\n};\n_s(useCustomLogin, \"0+HCfk0CDcNmGEPqdeQs+JElZz4=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\nexport default useCustomLogin;","map":{"version":3,"names":["useDispatch","useSelector","Navigate","createSearchParams","useNavigate","loginPostAsync","logout","jsxDEV","_jsxDEV","useCustomLogin","_s","navigate","dispatch","exceptionHandle","ex","console","log","errorMsg","response","data","error","errorStr","toString","alert","pathname","search","loginState","state","loginSlice","isLogin","email","doLogin","loginParam","action","payload","doLogout","moveToPath","path","replace","moveToLogin","moveToLoginReturn","to","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/choseong-jin/react_spring_boot/front-end/mall/src/hooks/useCustomLogin.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\"\r\nimport { Navigate, createSearchParams, useNavigate } from \"react-router-dom\"\r\nimport { loginPostAsync, logout } from \"../slices/loginSlice\"\r\n\r\nconst useCustomLogin = ( ) => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const exceptionHandle = (ex) => {\r\n\r\n    console.log(\"Exception------------------------\")\r\n\r\n    console.log(ex)\r\n\r\n    const errorMsg = ex.response.data.error\r\n\r\n    const errorStr = createSearchParams({error: errorMsg}).toString()\r\n\r\n    if(errorMsg === 'REQUIRE_LOGIN'){\r\n      alert(\"로그인 해야만 합니다.\")\r\n      navigate({pathname:'/member/login' , search: errorStr})\r\n\r\n      return\r\n    }\r\n\r\n    if(ex.response.data.error === 'ERROR_ACCESSDENIED'){\r\n      alert(\"해당 메뉴를 사용할 수 있는 권한이 없습니다.\")\r\n      navigate({pathname:'/member/login' , search: errorStr})\r\n      return \r\n    }\r\n  }\r\n\r\n\r\n  const loginState = useSelector(state => state.loginSlice) //-------로그인 상태\r\n\r\n  const isLogin = loginState.email ? true :false //----------로그인 여부 \r\n  \r\n\r\n  const doLogin = async (loginParam) => { //----------로그인 함수 \r\n\r\n    const action  = await dispatch(loginPostAsync(loginParam))\r\n\r\n    return action.payload\r\n\r\n  }\r\n\r\n  const doLogout = () => { //---------------로그아웃 함수 \r\n\r\n    dispatch(logout())\r\n  }\r\n\r\n  const moveToPath = (path) => {  //----------------페이지 이동 \r\n    navigate({pathname: path}, {replace:true})\r\n  }\r\n\r\n  const moveToLogin = () => { //----------------------로그인 페이지로 이동 \r\n    navigate({pathname: '/member/login'}, {replace:true})\r\n  }\r\n\r\n  const moveToLoginReturn = () => { //----------------------로그인 페이지로 이동 컴포넌트 \r\n    return <Navigate replace to=\"/member/login\"/>\r\n  }\r\n\r\n  return  {loginState, isLogin, doLogin, doLogout, moveToPath, moveToLogin, moveToLoginReturn, exceptionHandle}\r\n\r\n}\r\n\r\nexport default useCustomLogin\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,kBAAkB,EAAEC,WAAW,QAAQ,kBAAkB;AAC5E,SAASC,cAAc,EAAEC,MAAM,QAAQ,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,cAAc,GAAGA,CAAA,KAAO;EAAAC,EAAA;EAE5B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,eAAe,GAAIC,EAAE,IAAK;IAE9BC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAEhDD,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IAEf,MAAMG,QAAQ,GAAGH,EAAE,CAACI,QAAQ,CAACC,IAAI,CAACC,KAAK;IAEvC,MAAMC,QAAQ,GAAGlB,kBAAkB,CAAC;MAACiB,KAAK,EAAEH;IAAQ,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC;IAEjE,IAAGL,QAAQ,KAAK,eAAe,EAAC;MAC9BM,KAAK,CAAC,cAAc,CAAC;MACrBZ,QAAQ,CAAC;QAACa,QAAQ,EAAC,eAAe;QAAGC,MAAM,EAAEJ;MAAQ,CAAC,CAAC;MAEvD;IACF;IAEA,IAAGP,EAAE,CAACI,QAAQ,CAACC,IAAI,CAACC,KAAK,KAAK,oBAAoB,EAAC;MACjDG,KAAK,CAAC,2BAA2B,CAAC;MAClCZ,QAAQ,CAAC;QAACa,QAAQ,EAAC,eAAe;QAAGC,MAAM,EAAEJ;MAAQ,CAAC,CAAC;MACvD;IACF;EACF,CAAC;EAGD,MAAMK,UAAU,GAAGzB,WAAW,CAAC0B,KAAK,IAAIA,KAAK,CAACC,UAAU,CAAC,EAAC;;EAE1D,MAAMC,OAAO,GAAGH,UAAU,CAACI,KAAK,GAAG,IAAI,GAAE,KAAK,EAAC;;EAG/C,MAAMC,OAAO,GAAG,MAAOC,UAAU,IAAK;IAAE;;IAEtC,MAAMC,MAAM,GAAI,MAAMrB,QAAQ,CAACP,cAAc,CAAC2B,UAAU,CAAC,CAAC;IAE1D,OAAOC,MAAM,CAACC,OAAO;EAEvB,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IAAE;;IAEvBvB,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAM8B,UAAU,GAAIC,IAAI,IAAK;IAAG;IAC9B1B,QAAQ,CAAC;MAACa,QAAQ,EAAEa;IAAI,CAAC,EAAE;MAACC,OAAO,EAAC;IAAI,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IAAE;IAC1B5B,QAAQ,CAAC;MAACa,QAAQ,EAAE;IAAe,CAAC,EAAE;MAACc,OAAO,EAAC;IAAI,CAAC,CAAC;EACvD,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAAE;IAChC,oBAAOhC,OAAA,CAACN,QAAQ;MAACoC,OAAO;MAACG,EAAE,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC/C,CAAC;EAED,OAAQ;IAACnB,UAAU;IAAEG,OAAO;IAAEE,OAAO;IAAEI,QAAQ;IAAEC,UAAU;IAAEG,WAAW;IAAEC,iBAAiB;IAAE3B;EAAe,CAAC;AAE/G,CAAC;AAAAH,EAAA,CA/DKD,cAAc;EAAA,QAEDL,WAAW,EAEXJ,WAAW,EA2BTC,WAAW;AAAA;AAkChC,eAAeQ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}