{"ast":null,"code":"import axios from \"axios\";\nimport { getCookie, setCookie } from \"./cookieUtil\";\nimport { API_SERVER_HOST } from \"../api/todoApi\";\nconst jwtAxios = axios.create();\nconst refreshJWT = async (accessToken, refreshToken) => {\n  const host = API_SERVER_HOST;\n  const header = {\n    headers: {\n      \"Authorization\": `Bearer ${accessToken}`\n    }\n  };\n  const res = await axios.get(`${host}/api/member/refresh?refreshToken=${refreshToken}`, header);\n  console.log(\"----------------------\");\n  console.log(res.data);\n  return res.data;\n};\n\n//before request\nconst beforeReq = config => {\n  console.log(\"before request.............\");\n  const memberInfo = getCookie(\"member\");\n  if (!memberInfo) {\n    console.log(\"Member NOT FOUND\");\n    return Promise.reject({\n      response: {\n        data: {\n          error: \"REQUIRE_LOGIN\"\n        }\n      }\n    });\n  }\n  const {\n    accessToken\n  } = memberInfo;\n\n  // Authorization 헤더 처리 \n  config.headers.Authorization = `Bearer ${accessToken}`;\n  return config;\n};\n\n//fail request\nconst requestFail = err => {\n  console.log(\"request error............\");\n  return Promise.reject(err);\n};\n\n//before return response\nconst beforeRes = async res => {\n  console.log(\"before return response...........\");\n\n  //console.log(res)\n\n  //'ERROR_ACCESS_TOKEN'\n  const data = res.data;\n  if (data && data.error === 'ERROR_ACCESS_TOKEN') {\n    const memberCookieValue = getCookie(\"member\");\n    const result = await refreshJWT(memberCookieValue.accessToken, memberCookieValue.refreshToken);\n    console.log(\"refreshJWT RESULT\", result);\n    memberCookieValue.accessToken = result.accessToken;\n    memberCookieValue.refreshToken = result.refreshToken;\n    setCookie(\"member\", JSON.stringify(memberCookieValue), 1);\n\n    //원래의 호출 \n    const originalRequest = res.config;\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\n    return await axios(originalRequest);\n  }\n  return res;\n};\n\n//fail response\nconst responseFail = err => {\n  console.log(\"response fail error.............\");\n  return Promise.reject(err);\n};\njwtAxios.interceptors.request.use(beforeReq, requestFail);\njwtAxios.interceptors.response.use(beforeRes, responseFail);\nexport default jwtAxios;","map":{"version":3,"names":["axios","getCookie","setCookie","API_SERVER_HOST","jwtAxios","create","refreshJWT","accessToken","refreshToken","host","header","headers","res","get","console","log","data","beforeReq","config","memberInfo","Promise","reject","response","error","Authorization","requestFail","err","beforeRes","memberCookieValue","result","JSON","stringify","originalRequest","responseFail","interceptors","request","use"],"sources":["/Users/choseong-jin/react_spring_boot/front-end/mall/src/util/jwtUtil.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\nimport { API_SERVER_HOST } from \"../api/todoApi\";\r\n\r\nconst jwtAxios = axios.create()\r\n\r\nconst refreshJWT =  async (accessToken, refreshToken) => {\r\n\r\n  const host = API_SERVER_HOST\r\n\r\n  const header = {headers: {\"Authorization\":`Bearer ${accessToken}`}}\r\n\r\n  const res = await axios.get(`${host}/api/member/refresh?refreshToken=${refreshToken}`, header)\r\n\r\n  console.log(\"----------------------\")\r\n  console.log(res.data)\r\n\r\n  return res.data \r\n}\r\n\r\n\r\n//before request\r\nconst beforeReq = (config) => {\r\n  console.log(\"before request.............\")\r\n\r\n  const memberInfo = getCookie(\"member\")\r\n  \r\n  if( !memberInfo ) {\r\n    console.log(\"Member NOT FOUND\")\r\n    return Promise.reject(\r\n      {response:\r\n        {data:\r\n          {error:\"REQUIRE_LOGIN\"}\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const {accessToken} = memberInfo\r\n\r\n   // Authorization 헤더 처리 \r\n   config.headers.Authorization = `Bearer ${accessToken}`\r\n\r\n  return config\r\n}\r\n\r\n//fail request\r\nconst requestFail = (err) => {\r\n  console.log(\"request error............\")\r\n \r\n  return Promise.reject(err)\r\n}\r\n\r\n//before return response\r\nconst beforeRes = async (res) => {\r\n  console.log(\"before return response...........\")\r\n\r\n  //console.log(res)\r\n\r\n  //'ERROR_ACCESS_TOKEN'\r\n  const data = res.data\r\n\r\n  if(data && data.error ==='ERROR_ACCESS_TOKEN'){\r\n\r\n    const memberCookieValue = getCookie(\"member\")\r\n\r\n    const result = await refreshJWT( memberCookieValue.accessToken, memberCookieValue.refreshToken )\r\n    console.log(\"refreshJWT RESULT\", result)\r\n\r\n    memberCookieValue.accessToken = result.accessToken\r\n    memberCookieValue.refreshToken = result.refreshToken\r\n\r\n    setCookie(\"member\", JSON.stringify(memberCookieValue), 1)\r\n\r\n    //원래의 호출 \r\n    const originalRequest = res.config\r\n\r\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`\r\n\r\n    return await axios(originalRequest)\r\n\r\n  }\r\n\r\n  return res\r\n}\r\n\r\n\r\n//fail response\r\nconst responseFail = (err) => {\r\n  console.log(\"response fail error.............\")\r\n  return Promise.reject(err);\r\n}\r\n\r\njwtAxios.interceptors.request.use( beforeReq, requestFail )\r\n\r\njwtAxios.interceptors.response.use( beforeRes, responseFail)\r\n\r\nexport default jwtAxios\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}