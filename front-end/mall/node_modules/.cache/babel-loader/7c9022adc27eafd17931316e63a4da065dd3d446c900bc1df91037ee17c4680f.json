{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\";\nconst getNum = (param, defaultValue) => {\n  if (!param) {\n    return defaultValue;\n  }\n  return parseInt(param);\n};\nconst useCustomMove = () => {\n  _s();\n  const navigate = useNavigate();\n  const [refresh, setRefresh] = useState(false);\n  const [queryParams] = useSearchParams();\n  const page = getNum(queryParams.get('page'), 1);\n  const size = getNum(queryParams.get('size'), 10);\n  const queryDefault = createSearchParams({\n    page,\n    size\n  }).toString(); //새로 추가\n\n  const moveToList = pageParam => {\n    let queryStr = \"\";\n    if (pageParam) {\n      const pageNum = getNum(pageParam.page, 1);\n      const sizeNum = getNum(pageParam.size, 10);\n      queryStr = createSearchParams({\n        page: pageNum,\n        size: sizeNum\n      }).toString();\n    } else {\n      queryStr = queryDefault;\n    }\n    navigate({\n      pathname: `../list`,\n      search: queryStr\n    });\n    setRefresh(!refresh); //추가 \n  };\n  const moveToModify = num => {\n    console.log(queryDefault);\n    navigate({\n      pathname: `../modify/${num}`,\n      search: queryDefault //수정시에 기존의 쿼리 스트링 유지를 위해 \n    });\n  };\n  const moveToRead = num => {\n    console.log(queryDefault);\n    navigate({\n      pathname: `../read/${num}`,\n      search: queryDefault\n    });\n  };\n  return {\n    moveToList,\n    moveToModify,\n    moveToRead,\n    page,\n    size,\n    refresh\n  }; //refresh 추가 \n};\n_s(useCustomMove, \"7cazDTfrudn8hz486I1qceoAH8Y=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\nexport default useCustomMove;","map":{"version":3,"names":["useState","createSearchParams","useNavigate","useSearchParams","getNum","param","defaultValue","parseInt","useCustomMove","_s","navigate","refresh","setRefresh","queryParams","page","get","size","queryDefault","toString","moveToList","pageParam","queryStr","pageNum","sizeNum","pathname","search","moveToModify","num","console","log","moveToRead"],"sources":["/Users/choseong-jin/react_spring_boot/front-end/mall/src/hooks/useCustomMove.js"],"sourcesContent":["\r\nimport { useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\nconst getNum  = (param, defaultValue) => {\r\n\r\n  if(!param){\r\n    return defaultValue\r\n  }\r\n\r\n  return parseInt(param)\r\n}\r\n\r\nconst useCustomMove = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const [queryParams] = useSearchParams()\r\n\r\n  const page = getNum(queryParams.get('page'), 1)\r\n  const size = getNum(queryParams.get('size'),10)\r\n\r\n  const queryDefault = createSearchParams({page, size}).toString() //새로 추가\r\n\r\n\r\n  const moveToList = (pageParam) => {\r\n\r\n    let queryStr = \"\"\r\n\r\n    if(pageParam){\r\n\r\n      const pageNum = getNum(pageParam.page, 1)\r\n      const sizeNum = getNum(pageParam.size, 10)\r\n\r\n      queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\r\n    }else {\r\n      queryStr = queryDefault\r\n    }\r\n\r\n    navigate({\r\n      pathname: `../list`,\r\n      search:queryStr\r\n    })\r\n\r\n    setRefresh(!refresh) //추가 \r\n\r\n\r\n  }\r\n\r\n  const moveToModify = (num) => {\r\n\r\n    console.log(queryDefault)\r\n\r\n    navigate({\r\n      pathname: `../modify/${num}`,\r\n      search: queryDefault  //수정시에 기존의 쿼리 스트링 유지를 위해 \r\n    })\r\n  }\r\n\r\n  const moveToRead =(num) => {\r\n\r\n    console.log(queryDefault)\r\n\r\n    navigate({\r\n      pathname: `../read/${num}`,\r\n      search: queryDefault\r\n    })\r\n  }\r\n\r\n\r\n  return  {moveToList, moveToModify, moveToRead, page, size, refresh} //refresh 추가 \r\n\r\n\r\n}\r\n\r\nexport default useCustomMove\r\n"],"mappings":";AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,kBAAkB,EAAEC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAEnF,MAAMC,MAAM,GAAIA,CAACC,KAAK,EAAEC,YAAY,KAAK;EAEvC,IAAG,CAACD,KAAK,EAAC;IACR,OAAOC,YAAY;EACrB;EAEA,OAAOC,QAAQ,CAACF,KAAK,CAAC;AACxB,CAAC;AAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACa,WAAW,CAAC,GAAGV,eAAe,CAAC,CAAC;EAEvC,MAAMW,IAAI,GAAGV,MAAM,CAACS,WAAW,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;EAC/C,MAAMC,IAAI,GAAGZ,MAAM,CAACS,WAAW,CAACE,GAAG,CAAC,MAAM,CAAC,EAAC,EAAE,CAAC;EAE/C,MAAME,YAAY,GAAGhB,kBAAkB,CAAC;IAACa,IAAI;IAAEE;EAAI,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAC;;EAGjE,MAAMC,UAAU,GAAIC,SAAS,IAAK;IAEhC,IAAIC,QAAQ,GAAG,EAAE;IAEjB,IAAGD,SAAS,EAAC;MAEX,MAAME,OAAO,GAAGlB,MAAM,CAACgB,SAAS,CAACN,IAAI,EAAE,CAAC,CAAC;MACzC,MAAMS,OAAO,GAAGnB,MAAM,CAACgB,SAAS,CAACJ,IAAI,EAAE,EAAE,CAAC;MAE1CK,QAAQ,GAAGpB,kBAAkB,CAAC;QAACa,IAAI,EAACQ,OAAO;QAAEN,IAAI,EAAEO;MAAO,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC;IACzE,CAAC,MAAK;MACJG,QAAQ,GAAGJ,YAAY;IACzB;IAEAP,QAAQ,CAAC;MACPc,QAAQ,EAAE,SAAS;MACnBC,MAAM,EAACJ;IACT,CAAC,CAAC;IAEFT,UAAU,CAAC,CAACD,OAAO,CAAC,EAAC;EAGvB,CAAC;EAED,MAAMe,YAAY,GAAIC,GAAG,IAAK;IAE5BC,OAAO,CAACC,GAAG,CAACZ,YAAY,CAAC;IAEzBP,QAAQ,CAAC;MACPc,QAAQ,EAAE,aAAaG,GAAG,EAAE;MAC5BF,MAAM,EAAER,YAAY,CAAE;IACxB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMa,UAAU,GAAGH,GAAG,IAAK;IAEzBC,OAAO,CAACC,GAAG,CAACZ,YAAY,CAAC;IAEzBP,QAAQ,CAAC;MACPc,QAAQ,EAAE,WAAWG,GAAG,EAAE;MAC1BF,MAAM,EAAER;IACV,CAAC,CAAC;EACJ,CAAC;EAGD,OAAQ;IAACE,UAAU;IAAEO,YAAY;IAAEI,UAAU;IAAEhB,IAAI;IAAEE,IAAI;IAAEL;EAAO,CAAC,EAAC;AAGtE,CAAC;AAAAF,EAAA,CA9DKD,aAAa;EAAA,QAEAN,WAAW,EAINC,eAAe;AAAA;AA0DvC,eAAeK,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}