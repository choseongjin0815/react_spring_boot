{"ast":null,"code":"var _jsxFileName = \"/Users/choseong-jin/react_spring_boot/front-end/mall/src/pages/member/KakaoRedirectPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getAccessToken, getMemberWithAccessToken } from \"../../api/kakaoApi\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../slices/loginSlice\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoRedirectPage = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const {\n    moveToPath\n  } = useCustomLogin();\n  const dispatch = useDispatch();\n  const authCode = searchParams.get(\"code\");\n  useEffect(() => {\n    getAccessToken(authCode).then(accessToken => {\n      console.log(accessToken);\n      getMemberWithAccessToken(accessToken).then(memberInfo => {\n        console.log(\"-------------------\");\n        console.log(memberInfo);\n        dispatch(login(memberInfo));\n\n        //소셜 회원이 아니라면\n        if (memberInfo && !memberInfo.social) {\n          moveToPath(\"/\");\n        } else {\n          moveToPath(\"/member/modify\");\n        }\n      });\n    });\n  }, [authCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Kakao Login Redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: authCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 4\n  }, this);\n};\n_s(KakaoRedirectPage, \"Zs/3wSOzM3rqZ50OThXsP4I3y+s=\", false, function () {\n  return [useSearchParams, useCustomLogin, useDispatch];\n});\n_c = KakaoRedirectPage;\nexport default KakaoRedirectPage;\nvar _c;\n$RefreshReg$(_c, \"KakaoRedirectPage\");","map":{"version":3,"names":["useEffect","useSearchParams","getAccessToken","getMemberWithAccessToken","useDispatch","login","useCustomLogin","jsxDEV","_jsxDEV","KakaoRedirectPage","_s","searchParams","moveToPath","dispatch","authCode","get","then","accessToken","console","log","memberInfo","social","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/choseong-jin/react_spring_boot/front-end/mall/src/pages/member/KakaoRedirectPage.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { getAccessToken, getMemberWithAccessToken } from \"../../api/kakaoApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../slices/loginSlice\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\n\r\nconst KakaoRedirectPage = () => {\r\n\r\n  const [searchParams] = useSearchParams()\r\n\r\n  const {moveToPath} = useCustomLogin()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const authCode = searchParams.get(\"code\")\r\n\r\n  useEffect(() => {\r\n\r\n    getAccessToken(authCode).then(accessToken => {\r\n      console.log(accessToken)\r\n\r\n      getMemberWithAccessToken(accessToken).then(memberInfo => {\r\n\r\n        console.log(\"-------------------\")\r\n        console.log(memberInfo)\r\n\r\n        dispatch(login(memberInfo))\r\n\r\n        //소셜 회원이 아니라면\r\n        if(memberInfo && !memberInfo.social){\r\n          moveToPath(\"/\")\r\n        }else {\r\n          moveToPath(\"/member/modify\")\r\n        }\r\n\r\n      })\r\n      \r\n    })\r\n\r\n  }, [authCode])\r\n\r\n  return (\r\n   <div>\r\n     <div>Kakao Login Redirect</div>\r\n     <div>{authCode}</div>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default KakaoRedirectPage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,cAAc,EAAEC,wBAAwB,QAAQ,oBAAoB;AAC7E,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAM,CAACC,YAAY,CAAC,GAAGV,eAAe,CAAC,CAAC;EAExC,MAAM;IAACW;EAAU,CAAC,GAAGN,cAAc,CAAC,CAAC;EAErC,MAAMO,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,QAAQ,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC;EAEzCf,SAAS,CAAC,MAAM;IAEdE,cAAc,CAACY,QAAQ,CAAC,CAACE,IAAI,CAACC,WAAW,IAAI;MAC3CC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;MAExBd,wBAAwB,CAACc,WAAW,CAAC,CAACD,IAAI,CAACI,UAAU,IAAI;QAEvDF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCD,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;QAEvBP,QAAQ,CAACR,KAAK,CAACe,UAAU,CAAC,CAAC;;QAE3B;QACA,IAAGA,UAAU,IAAI,CAACA,UAAU,CAACC,MAAM,EAAC;UAClCT,UAAU,CAAC,GAAG,CAAC;QACjB,CAAC,MAAK;UACJA,UAAU,CAAC,gBAAgB,CAAC;QAC9B;MAEF,CAAC,CAAC;IAEJ,CAAC,CAAC;EAEJ,CAAC,EAAE,CAACE,QAAQ,CAAC,CAAC;EAEd,oBACCN,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BlB,OAAA;MAAAc,QAAA,EAAMR;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAET,CAAC;AAAAhB,EAAA,CAzCKD,iBAAiB;EAAA,QAEER,eAAe,EAEjBK,cAAc,EAElBF,WAAW;AAAA;AAAAuB,EAAA,GANxBlB,iBAAiB;AA2CvB,eAAeA,iBAAiB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}